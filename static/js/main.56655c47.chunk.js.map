{"version":3,"sources":["stepper.js","hsl.js","StepForm.js","App.js","serviceWorker.js","index.js"],"names":["R","require","step","start","end","steps","arr","range","delta","map","i","stepA","a","b","compose","transpose","fromPairsA","keys","values","fromPairs","module","exports","stepO","vals","vs","contrast","hsl","new_l","l","h","s","encode","fromCss","hslString","xs","replace","split","x","parseFloat","isValid","obj","every","isNaN","rand","Math","floor","random","toCss","try_decode","includes","length","React","Component","App","ColorLayout","props","colorList","valArgs","aError","bError","stepsError","Stepper","color","Hsl","content","toString","getColorContentList","args","maybeA","maybeB","maybeSteps","parseInt","validate","query","get","getArgs","URLSearchParams","useLocation","search","style","height","contentList","c","backgroundColor","layout","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.56655c47.chunk.js","sourcesContent":["const R = require('ramda');\n\n// Step from start to end in i steps.\n// (Number, Number, Positive Int) -> [Number]\n// @example\n//     step(10, 20, 1) => [ 10, 20 ]\n//     step(10, 20, 2) => [ 10, 15, 20 ]\n//     step(10, 20, 5) => [ 10, 12, 14, 16, 18, 20 ]\nfunction step(start, end, steps = 1) {\n\n    // Guard: require positive steps\n    if (steps < 1) {\n        throw (\n            \"Error: step() expected a positive Int for steps, got \" + steps\n        );\n    }\n\n    const arr = R.range(0, steps + 1);  \n    const delta = (end - start) / steps;\n\n    return R.map(i => start + (delta * i), arr);\n}\n\n// Step over arrays.\n// ([a], [a], i) -> [a]\n// @example \n//     stepA([ 10 ], [ 20 ], 1) => [ [ 10 ], [ 20 ] ]\n//     stepA([ 10 ], [ 20 ], 2) => [ [ 10 ], [ 15 ], [ 20 ] ]\n//     stepA([ 0, 2, 4 ], [ 10, 12, 14 ], 2) =>\n//           [ [ 0, 2, 4 ], [ 5, 7, 9 ], [ 10, 12, 14 ] ] \nfunction stepA(a, b, steps) {\n    return R.compose(\n        R.transpose,\n        R.map(arr => step(arr[0], arr[1], steps)),\n        R.transpose\n    )([a,b])\n}\n\n// Step over objects.\n// ({k: v}, {k: v}, i) -> [{k, v}]\n// @example\n//   stepO({ a: 1, b: 2 }, { a: 2, b: 3 }, 2) =>\n//      [ { a: 1, b: 2 }, { a: 1.5, b: 2.5 }, { a: 2, b: 3 } ]\nfunction stepO(a, b, steps) {\n    const keys = R.keys(a);\n    const vals = stepA(R.values(a), R.values(b), steps); \n\n    return R.map(vs => fromPairsA(keys, vs))(vals);\n}\n\n// Create an object from arrays of keys and values.\n// ([a], [b]) -> [{a: b}]\n// @example\n//     fromPairsA([ 'a', 'b' ], [ 1, 2 ]) => { a: 1, b: 2 }\nfunction fromPairsA(keys, values) {\n    return R.compose(\n        R.fromPairs,\n        R.transpose\n    )([keys,values]);\n} \n\nmodule.exports.step = step;\nmodule.exports.stepA = stepA;\nmodule.exports.stepO = stepO;\nmodule.exports.fromPairsA = fromPairsA;\n","// Functions relating to Hsl's\n// Hsl :: { h: Int, s: Int, l: Int }\n\n// Get a contrasting Hsl color. Useful for text.\nfunction contrast(hsl) {\n    const new_s = 0;\n    const new_l = hsl.l > 40 ? 20 : 80;\n    return { h: hsl.h, s: new_s, l: new_l }\n}\n\n// Hsl -> String like \"hsl:0,100,50\"\nfunction encode(hsl) {\n    return `hsl:${hsl.h},${hsl.s},${hsl.l}`;\n}\n\n// String -> Hsl\n// \"hsl(0, 1%, 2%)\" -> { h: 0, s: 1, l: 2 }\nfunction fromCss(hslString) {\n    const xs = hslString.replace(/[ %hsl()]/g, \"\").split(\",\").map(x => parseFloat(x));\n    return { h: xs[0], s: xs[1], l: xs[2] }\n}\n\n// Check for a well formed Hsl object. -> Bool\nfunction isValid(obj) {\n    return [obj.h, obj.s, obj.l].map(x => parseFloat(x)).every(x => !isNaN(x))\n}\n\n// Create random Hsl\nfunction rand() {\n    return { \n        h: Math.floor(Math.random() * 360),\n        s: Math.floor(Math.random() * 101),\n        l: Math.floor(Math.random() * 101)\n    };\n}\n\n// Hsl -> Css\n// Ex) { h: 120, s: 50, l: 100 } -> hsl(120, 50, 100).\nfunction toCss(obj) {\n    return `hsl(${obj.h}, ${obj.s}%, ${obj.l}%)`;\n}\n\n// String -> Hsl || Null\nfunction try_decode(hslString) {\n    if (hslString.includes(\"hsl:\")) {\n        const xs = hslString.split(\":\")[1]\n                            .split(\",\")\n                            .map(x => parseFloat(x))\n        if (xs.every(x => !isNaN(x)) && xs.length === 3) {\n            return { h: xs[0], s: xs[1] , l: xs[2] };\n        }\n    }\n    return null;\n}\n\nmodule.exports.contrast = contrast;\nmodule.exports.encode = encode;\nmodule.exports.fromCss = fromCss;\nmodule.exports.isValid = isValid;\nmodule.exports.rand = rand;\nmodule.exports.toCss = toCss;\nmodule.exports.try_decode = try_decode;\n","import React from \"react\";\n\nconst MAX_STEPS = 254;\nconst MIN_STEPS = 1;\n\nexport default class StepForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { steps: 4 };  \n    }\n\n    render() {\n        return (\n            <div style={{ display: \"flex\", \n                          flexDirection: \"column\", \n                          fontSize: \"25vh\",\n                          height: \"100vh\", \n                          justifyContent: \"space-around\",\n                          textAlign: \"center\" }}>\n                <div onClick={(e)=>this.increment(e)}>▲</div>\n                <div>{this.state.steps}</div>\n                <div onClick={(e)=>this.decrement(e)}>▼</div>\n            </div>\n        );\n    }\n\n    increment() {\n        this.setState({\n            steps: this.state.steps >= MAX_STEPS ? MAX_STEPS : (this.state.steps + 1)\n        });\n    };\n      \n    decrement() {\n        this.setState({\n          steps: this.state.steps <= MIN_STEPS ? MIN_STEPS : (this.state.steps - 1)\n        });\n    };\n}","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Link,\n  useLocation,\n  useContext\n} from \"react-router-dom\";\nimport Stepper from \"./stepper\";\nimport StepForm from \"./StepForm\";\nimport Hsl from \"./hsl\";\n\n// React-router requires keeping query as a React child object.\nexport default function App() {\n  return (\n    <Router>\n      <ColorLayout />\n      {/*\n      <StepForm />\n      */}\n    </Router>\n  );\n}\n\nfunction ColorLayout(props) {\n  const query = new URLSearchParams(useLocation().search);\n  const args = getArgs(query); // { a, b, steps }\n  const validatedArgs = validate(args); // { a, b, steps, aError, bError, stepsError }\n  const colorList = getColorContentList(validatedArgs); // [{ hsl, content }]\n  return (\n    <div style={{height: \"95vh\"}}>\n        {layout(colorList)}\n    </div>\n  )\n}\n\n// React-Router Query -> { a: Hsl?, b: Hsl?, steps: Int? }\nfunction getArgs(query) {\n  return { \n    a: query.get(\"a\") || Hsl.encode(Hsl.rand()), \n    b: query.get(\"b\") || Hsl.encode(Hsl.rand()), \n    steps: query.get(\"steps\") || \"4\"\n  }\n}\n\n// { a: Hsl, b: Hsl, steps: Int } -> \n// { a: Hsl, b: Hsl, steps: }\nfunction validate(args) {\n\n  const maybeA = Hsl.try_decode(args.a);\n  const maybeB = Hsl.try_decode(args.b);\n  const maybeSteps = parseInt(args.steps);\n\n  return {\n    a: maybeA ? maybeA : args.a,\n    b: maybeB ? maybeB : args.b,\n    steps: maybeSteps ? maybeSteps : args.steps,\n    aError: maybeA ? null : \"Ooops! Something's wrong with a.\",\n    bError: maybeB ? null : \"Ooops! Something's wrong with b.\",\n    stepsError: maybeSteps ? null : \"Ooops! Something's wrong with steps\"\n  }\n}\n\n// { a: Hsl, b: Hsl, steps: Int?, aError: String?, bError: String?, stepsError: String } =>\n// [{ color: String, content: String }];\nfunction getColorContentList(valArgs) {\n  // Happy Path\n  if (valArgs.aError == null && valArgs.bError == null && valArgs.stepsError == null) {\n    return Stepper.stepO(valArgs.a, valArgs.b, valArgs.steps)\n                  .map(hsl => { return { color: Hsl.toCss(hsl), content: Hsl.toCss(hsl) }});\n  } \n  // Sad Path\n  else {\n    const a = valArgs.aError ? { color: \"hsl(0,0%,0%)\", content: valArgs.aError } : \n                                { color: Hsl.toCss(valArgs.a), content: Hsl.toCss(valArgs.a) };\n    const s = valArgs.stepsError ? { color: \"hsl(0,0%,0%)\", content: valArgs.stepsError } : \n                                    { color: \"hsl(0,0%,50%)\", content: valArgs.steps.toString() }; \n    const b = valArgs.bError ? { color: \"hsl(0,0%,0%)\", content: valArgs.bError } : \n                                { color: Hsl.toCss(valArgs.b), content: Hsl.toCss(valArgs.b) };\n    return [a,s,b];\n  }\n}\n\n// [{ color: cssString, content: String }] -> HTML\nfunction layout(contentList) {\n  const height = `${100 / contentList.length}vh`;\n  return contentList.map(c => \n    <div style= {{backgroundColor: c.color\n                , color: Hsl.toCss(Hsl.contrast(Hsl.fromCss(c.color)))\n                , height: height \n                }}>\n      {c.content}\n    </div>\n  )\n}\n\nfunction Debug(params) {\n  return <div>{JSON.stringify(params)}</div>;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}